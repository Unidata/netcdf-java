/*
 * Copyright 2012, UCAR/Unidata.
 * See the LICENSE file for more information.
 */

package dap4.dap4lib;

/**
 * Wrap Servlet Constants to isolate to this package.
 */

import org.apache.http.HttpStatus;

public interface DapCodes {
  int SC_CONTINUE = HttpStatus.SC_CONTINUE;
  int SC_SWITCHING_PROTOCOLS = HttpStatus.SC_SWITCHING_PROTOCOLS;
  int SC_OK = HttpStatus.SC_OK;
  int SC_CREATED = HttpStatus.SC_CREATED;
  int SC_ACCEPTED = HttpStatus.SC_ACCEPTED;
  int SC_NON_AUTHORITATIVE_INFORMATION = HttpStatus.SC_NON_AUTHORITATIVE_INFORMATION;
  int SC_NO_CONTENT = HttpStatus.SC_NO_CONTENT;
  int SC_RESET_CONTENT = HttpStatus.SC_RESET_CONTENT;
  int SC_PARTIAL_CONTENT = HttpStatus.SC_PARTIAL_CONTENT;
  int SC_MULTIPLE_CHOICES = HttpStatus.SC_MULTIPLE_CHOICES;
  int SC_MOVED_PERMANENTLY = HttpStatus.SC_MOVED_PERMANENTLY;
  int SC_MOVED_TEMPORARILY = HttpStatus.SC_MOVED_TEMPORARILY;
  int SC_SEE_OTHER = HttpStatus.SC_SEE_OTHER;
  int SC_NOT_MODIFIED = HttpStatus.SC_NOT_MODIFIED;
  int SC_USE_PROXY = HttpStatus.SC_USE_PROXY;
  int SC_TEMPORARY_REDIRECT = HttpStatus.SC_TEMPORARY_REDIRECT;
  int SC_BAD_REQUEST = HttpStatus.SC_BAD_REQUEST;
  int SC_UNAUTHORIZED = HttpStatus.SC_UNAUTHORIZED;
  int SC_PAYMENT_REQUIRED = HttpStatus.SC_PAYMENT_REQUIRED;
  int SC_FORBIDDEN = HttpStatus.SC_FORBIDDEN;
  int SC_NOT_FOUND = HttpStatus.SC_NOT_FOUND;
  int SC_METHOD_NOT_ALLOWED = HttpStatus.SC_METHOD_NOT_ALLOWED;
  int SC_NOT_ACCEPTABLE = HttpStatus.SC_NOT_ACCEPTABLE;
  int SC_PROXY_AUTHENTICATION_REQUIRED = HttpStatus.SC_PROXY_AUTHENTICATION_REQUIRED;
  int SC_REQUEST_TIMEOUT = HttpStatus.SC_REQUEST_TIMEOUT;
  int SC_CONFLICT = HttpStatus.SC_CONFLICT;
  int SC_GONE = HttpStatus.SC_GONE;
  int SC_LENGTH_REQUIRED = HttpStatus.SC_LENGTH_REQUIRED;
  int SC_PRECONDITION_FAILED = HttpStatus.SC_PRECONDITION_FAILED;
  int SC_REQUEST_URI_TOO_LONG = HttpStatus.SC_REQUEST_URI_TOO_LONG;
  int SC_UNSUPPORTED_MEDIA_TYPE = HttpStatus.SC_UNSUPPORTED_MEDIA_TYPE;
  int SC_REQUESTED_RANGE_NOT_SATISFIABLE = HttpStatus.SC_REQUESTED_RANGE_NOT_SATISFIABLE;
  int SC_EXPECTATION_FAILED = HttpStatus.SC_EXPECTATION_FAILED;
  int SC_INTERNAL_SERVER_ERROR = HttpStatus.SC_INTERNAL_SERVER_ERROR;
  int SC_NOT_IMPLEMENTED = HttpStatus.SC_NOT_IMPLEMENTED;
  int SC_BAD_GATEWAY = HttpStatus.SC_BAD_GATEWAY;
  int SC_SERVICE_UNAVAILABLE = HttpStatus.SC_SERVICE_UNAVAILABLE;
  int SC_GATEWAY_TIMEOUT = HttpStatus.SC_GATEWAY_TIMEOUT;
  int SC_HTTP_VERSION_NOT_SUPPORTED = HttpStatus.SC_HTTP_VERSION_NOT_SUPPORTED;
}
