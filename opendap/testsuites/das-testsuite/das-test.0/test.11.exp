# expect/tcl code to test the das parser and scanner
# jhrg
#
# $Log: test.11.exp,v $
# Revision 1.1  2003/08/11 20:50:09  ndp
# Initial revision
#
# Revision 1.4  2003/03/05 00:02:48  ndp
# *** empty log message ***
#
# Revision 1.3  2002/05/31 17:09:18  jimg
# Updated tests from C++. This includes some changes for the Java code.
#
# Revision 1.7  2000/06/16 18:15:01  jimg
# Merged with 3.1.7
#
# Revision 1.6.22.1  2000/06/15 02:24:56  jimg
# Fixed the tests: problems with PATH, etc. broke the tests on my new machine
#
# Revision 1.6  1998/08/13 22:10:13  jimg
# Bytes now are unsigned (0..255). Fixed this test to check that.
#
# Revision 1.5  1997/08/25 18:39:48  jimg
# Removed errant double semicolon at the end of the Url attribute - replaced
# it with a single semicolon.
#
# Revision 1.4  1997/05/13 23:29:11  jimg
# *** empty log message ***
#
# Revision 1.3  1996/08/12 22:22:12  jimg
# Changed for the new error message text from the parser.
#
# Revision 1.2  1996/04/05 22:00:12  jimg
# Misc Changes for release 2.0.1 of the core software - for developers.
#
# Revision 1.1  1995/02/16  15:34:45  jimg
# Added these tests. See comments in files in parent directory.
#

global comp_output		# contains output from das-test_start
global verbose			# this and srcdir are set by runtest.exp
global srcdir

# The variable `test_name' is the name of the das input file for this test.

set test_name test.11

# The variable `test_out' is a string that contains the text that should be
# stored in comp_output by das-test_start. The two strings should match
# exactly.

set test_out "Attributes {
    test {
        String names this, is, a, vector, of, strings;
        Byte b 1, 0, 127, 255;
        Int32 int_vec 1, 2, 2147483647;
        Float64 float_vec 1.0, -1.0, +1.0, 0.2, -0.2, +0.2, .3, -.3, +.3, -3.1415, -3.1415e-99, -3.1415e+99, +3.1415e-99, -3., +2., 4.;
        Url where http://bozo.place.com/home.html;
    }
}"

das-test_start p $srcdir/$test_name

if {$verbose >= 1} {
    send_user "\n----- Expected output -----\n"
    send_user "$test_out"
    send_user "\n---------------------------\n";
}


if ![string compare $test_out $comp_output] { # check comp_output
    pass "$test_name"
} else {
    fail "$test_name"
}
