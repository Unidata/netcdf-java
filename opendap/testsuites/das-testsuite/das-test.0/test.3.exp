# expect/tcl code to test the das parser and scanner
# jhrg
#
# $Log: test.3.exp,v $
# Revision 1.1  2003/08/11 20:50:09  ndp
# Initial revision
#
# Revision 1.2  2002/05/31 17:09:18  jimg
# Updated tests from C++. This includes some changes for the Java code.
#
# Revision 1.9  2000/06/16 18:15:01  jimg
# Merged with 3.1.7
#
# Revision 1.8.38.1  2000/06/15 02:24:57  jimg
# Fixed the tests: problems with PATH, etc. broke the tests on my new machine
#
# Revision 1.8  1997/05/13 23:29:24  jimg
# *** empty log message ***
#
# Revision 1.7  1996/05/14 15:40:50  jimg
# These changes have already been checked in once before. However, I
# corrupted the source repository and restored it from a 5/9/96 backup
# tape. The previous version's log entry should cover the changes.
#
# Revision 1.6  1995/02/10  03:31:14  jimg
# Modified test cases for type checking.
#
# Revision 1.5  1994/12/09  21:45:47  jimg
# Modified for new unix.exp.
#
# Revision 1.4  1994/10/05  16:51:49  jimg
# Added TYPE to each of the DAS test files.
# The `expect' files correcly check for that in the output.
#
# Revision 1.3  1994/09/27  23:14:15  jimg
# Changed expected outcomes to match new das.print() mfunc.
#
# Revision 1.2  1994/09/09  16:15:22  jimg
# Fixed namign of the test (was given as $srcdir//$test_name, should have been
# $srcdir$test_name).
#
# Revision 1.1  1994/08/29  19:57:21  jimg
# Test procedures for the DAS parser, scanner and C++ class.
#

global comp_output		# contains output from das-test_start
global verbose			# this and srcdir are set by runtest.exp
global srcdir

# The variable `test_name' is the name of the das input file for this test.

set test_name test.3

# The variable `test_out' is a string that contains the text that should be
# stored in comp_output by das-test_start. The two strings should match
# exactly.

set test_out "Attributes {
    var1 {
        String comment \"One thing about these long comments is that they
might cause problems with memory - overwrites, ...\";
        String comment2 \"This quote tests a \\\"quote within a quote\\\", he said\";
        String quote1 \"\\\"\";
        String quote2 \"\\7 seven\";
    }
}"

das-test_start p $srcdir/$test_name

# send_user "comp output: $comp_output\n"
# send_user "test out: $test_out\n"

# send_user "result of compare [string compare $test_out $comp_output]\n"
# send_user "result of match [string match $test_out $comp_output]\n"

if ![string compare $test_out $comp_output] {
    pass "$test_name"
} else {
    fail "$test_name"
}


